/// <filename>
///     Wallet.cs
/// </filename>

// <auto-generated/>
 namespace Chronos.Coins
{
  public sealed class Wallet : ZES.Infrastructure.Domain.AggregateRoot
  {
    public Wallet() 
    {
      Register<Chronos.Coins.Events.WalletCreated>(ApplyEvent); 
      Register<Chronos.Coins.Events.WalletBalanceChanged>(ApplyEvent); 
      Register<Chronos.Coins.Events.CoinMined>(ApplyEvent); 
    }  
    
    public string Coin { get; set; }
    
    public Wallet(string address, string coin) : this() 
    {
      When(new Chronos.Coins.Events.WalletCreated(address, coin));
    }  
    public void ApplyDelta (Core.Quantity delta, string txId)
    {
      When(new Chronos.Coins.Events.WalletBalanceChanged(delta, txId));
    }  
    public void MineCoin (Core.Quantity mineQuantity, string blockHash)
    {
      When(new Chronos.Coins.Events.CoinMined(mineQuantity, blockHash));
    }  
    private void ApplyEvent (Chronos.Coins.Events.WalletCreated e)
    {
      Id = e.Address;
      Coin = e.Coin;
    }  
    private void ApplyEvent (Chronos.Coins.Events.WalletBalanceChanged e)
    {
    }  
    private void ApplyEvent (Chronos.Coins.Events.CoinMined e)
    {
    }  
  }
}

