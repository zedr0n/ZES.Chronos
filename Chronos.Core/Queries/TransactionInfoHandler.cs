/// <filename>
///     TransactionInfoHandler.cs
/// </filename>

// <auto-generated/>
 namespace Chronos.Core.Queries
{
  public class TransactionInfoHandler : ZES.Interfaces.Domain.IProjectionHandler<TransactionInfo>
  {
    public TransactionInfo Handle (ZES.Interfaces.IEvent e, TransactionInfo state)
    {
      return Handle((dynamic) e, state);
    }  
    public TransactionInfo Handle (Chronos.Core.Events.TransactionRecorded e, TransactionInfo state)
    {
      return new TransactionInfo(e.TxId, e.Timestamp.ToInstant(), e.Quantity, e.TransactionType, e.Comment);
    }  
    public TransactionInfo Handle (Chronos.Core.Events.TransactionDetailsUpdated e, TransactionInfo state)
    {
      return new TransactionInfo(state.TxId, state.Date, state.Quantity, e.TransactionType, e.Comment);
    }
    public TransactionInfo Handle (Chronos.Core.Events.TransactionQuoteAdded e, TransactionInfo state)
    {
      var newState = new TransactionInfo(state.TxId, state.Date, state.Quantity, state.TransactionType, state.Comment);
      newState.Quotes.Add(e.Quantity);
      return newState;
    }
  }
}

